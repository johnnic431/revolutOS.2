--[[Terminus API

Sylvyrfysh - All Rights Reserved
Unauthorized copying, and/or redistribution of this file, via any medium without express written permission of Sylvyrfysh (Nicholas Johnson) is strictly prohibited
Proprietary and confidential
Written by Nicholas Johnson <johnnic431@gmail.com>, May 7 2015

]]

function init(this,name,ter)
    new={};
	new.name=(name or "Log");
	new.drawables={};
	new.termi=ter;
	for k,v in pairs(this) do
		if k~="init" then
			new[k]=v;
		end
	end
	return setmetatable(new,this);
end

function typeof()
	return "screen";
end

function addFunction(this,tbl)
	if tbl.name==nil then return false; end
	if tbl.draw==nil then return false; end
	table.insert(this.drawables,tbl);
	this.termi:log_i("Adding function "..tbl.name);
	return true;
end

function returnFunction(this,name)
	for i=1,#this.drawables do
		if this.drawables[i].name==name then
			this.drawables[i]=nil;
		end
	end
end

function redraw(this)
	this.termi:log_i("Redrawing...");
	for t,y in pairs(this.drawables) do
		this.termi:log_i("Drawing "..t);
		y.draw();
	end
	this.termi:log_i("Done redrawing!");
end